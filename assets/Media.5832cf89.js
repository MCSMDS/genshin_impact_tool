"undefined"!=typeof require&&require;var e,t,a=(e,t,a)=>{if(!t.has(e))throw TypeError("Cannot "+a)},n=(e,t,n)=>(a(e,t,"read from private field"),n?n.call(e):t.get(e));const r=(t=class{constructor(t){var n,r,s,i;((e,t,a)=>{if(t.has(e))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(e):t.set(e,a)})(this,e,void 0),s=t,a(n=this,r=e,"write to private field"),i?i.call(n,s):r.set(n,s)}toFile(){switch(n(this,e).constructor.name){case"File":return new File([n(this,e)],"");case"HTMLCanvasElement":return new File([new Uint8Array(atob(n(this,e).toDataURL().split(",")[1]).split("").map((e=>e.charCodeAt())))],"")}}toURL(){switch(n(this,e).constructor.name){case"File":return URL.createObjectURL(n(this,e));case"HTMLCanvasElement":return n(this,e).toDataURL()}}toBuffer(){switch(n(this,e).constructor.name){case"ArrayBuffer":return n(this,e).slice();case"File":return new Promise((t=>{const a=new FileReader;a.onload=()=>t(a.result),a.readAsArrayBuffer(n(this,e))}))}}toCanvas(){switch(n(this,e).constructor.name){case"File":return new Promise((t=>{const a=new Image;a.onload=()=>{const e=document.createElement("canvas");e.width=a.width,e.height=a.height,e.getContext("2d").drawImage(a,0,0),t(e)},a.src=URL.createObjectURL(n(this,e))}));case"HTMLCanvasElement":return(()=>{const t=document.createElement("canvas");return t.width=n(this,e).width,t.height=n(this,e).height,t.getContext("2d").drawImage(n(this,e),0,0),t})()}}},e=new WeakMap,t),s=async e=>e,i=async(e,t)=>{const a=new(window.AudioContext||window.webkitAudioContext),n=await e.toBuffer(),r=await new Promise((e=>a.decodeAudioData(n,e)));return((e,t)=>{const a=[];for(let n=0;n<e.length/t;n++){let r=0;const s=n*t,i=Math.min(s+t,e.length);for(let t=s;t<i;t++)r=Math.max(e[t],r);a.push(r)}return a})((e=>{let t=0;for(let a in e)e[a]=Math.abs(e[a]),t=Math.max(e[a],t);for(let a in e)e[a]/=t;return e})(r.getChannelData(0)),r.sampleRate/t)},o=(e,t)=>{let a=[],n=[];for(let r=0;r<e.length;r++)e[r]>=.5?n.push(r):n[0]&&(a.push(~~(n.reduce(((e,t)=>e+t))/n.length)/t),n=[]);return a},c=(e,t)=>new Promise((a=>{let n=0;const r=[],s=document.createElement("video");s.addEventListener("loadeddata",(()=>s.currentTime=t[n])),s.addEventListener("seeked",(async()=>{if(n<t.length){const e=document.createElement("canvas");e.width=s.videoWidth,e.height=s.videoHeight,await new Promise((e=>setTimeout(e,512))),e.getContext("2d").drawImage(s,0,0,s.videoWidth,s.videoHeight),r.push(e),s.currentTime=t[n+=1]||0}else a(r)})),s.playsInline=!0,s.src=e.toURL(),s.play(),s.pause()})),h=(e,t,a,n,r)=>{const s=document.createElement("canvas");return s.width=n,s.height=r,s.getContext("2d").drawImage(e,t,a,n,r,0,0,n,r),s};export{r as M,o as a,c as b,h as c,i as g,s as v};
